{"version":3,"sources":["service/user.js","components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/LoginPage.js/LoginPage.js","User/MovieList.js","User/index.js","components/App/App.js","ApolloClient.js","index.js"],"names":["getLoggedInUser","user","localStorage","getItem","JSON","parse","setLoggedInUser","stringifiedUser","stringify","setItem","logout","removeItem","withRouter","_useState","useState","_useState2","Object","slicedToArray","setUser","history","useHistory","useEffect","storedUser","react_default","a","createElement","className","react_router_dom","to","src","alt","style","padding","onClick","push","float","cursor","margin","color","API_URL","API_KEY","BACKEND_API","IMAGE_BASE_URL","HeroImage","_ref","image","title","text","background","concat","SearchBar","state","value","timeout","doSearch","event","callback","_this","props","setState","target","clearTimeout","setTimeout","this","lib_default","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","_this$state","_this$state2","fetch","then","result","json","toConsumableArray","results","page","total_pages","sessionStorage","catch","error","console","objectSpread","_this$state3","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","addToFav","loggedInUserFetched","input","Axios","method","url","data","headers","Content-Type","response","status","alert","log","_this2","location","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","fontSize","backgroundColor","border","borderRadius","elements_Actor_Actor","NotFound","uname","setUname","_useState3","_useState4","msg","setMsg","_useState5","_useState6","onLoginSubmit","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","handleMsg","stop","_x","apply","arguments","isSuccess","undefined","window","reload","Fragment","onSubmit","required","marginLeft","MovieList","onViewClick","onRemove","_id","favMovies","setFavMovies","getMovies","favMovieList","User_MovieList","App","elements_Header_Header","react_router","path","component","exact","LoginPage","UserDetail","ApolloClient","uri","ReactDOM","render","react_common_esm","client","components_App_App","document","getElementById"],"mappings":"qKAAaA,EAAkB,WAC3B,IAAMC,EAAOC,aAAaC,QAAQ,QAClC,OAAOC,KAAKC,MAAMJ,IAGTK,EAAkB,SAACL,GAC5B,IAAMM,EAAkBH,KAAKI,UAAUP,GACvCC,aAAaO,QAAQ,OAAQF,IAGpBG,EAAS,WAElBR,aAAaS,WAAW,eC0CbC,kBAjDf,WAAkB,IAAAC,EACOC,mBAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTZ,EADSc,EAAA,GACJG,EADIH,EAAA,GAEVI,EAAUC,cAchB,OAZAC,oBAAU,WACR,IAAMC,EAAatB,IACnBkB,EAAQI,IACP,IAUHC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,IAAI,8BAA8BC,IAAI,eAGnEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBG,IAAI,wBAAwBC,IAAI,eAGlEP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAIC,QAAS,kBACxB/B,EAAOsB,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,KAAGQ,QAAS,kBAlBdvB,IACAV,IACAkB,EAAQ,WACRC,EAAQe,KAAK,MAeiBH,MAAO,CAACI,MAAO,QAASC,OAAO,UAAWC,OAAQ,SAAUC,MAAM,WAA9F,UAGAf,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMI,MAAO,CAACI,MAAO,QAASG,MAAM,SAAUV,GAAG,aACjD3B,IAKFsB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMI,MAAO,CAACI,MAAO,QAASG,MAAM,OAAQV,GAAG,cAA/C,qECvCEW,EAAU,gCACVC,EAAU,mCACVC,EAAc,4BAMdC,EAAgB,6BCmBPC,SA1BG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,MAAOC,EAAjBH,EAAiBG,KAAjB,OAChBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbK,MAAO,CACLiB,WAAU,mIAAAC,OAKDJ,EALC,iBAQZtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAKqB,GACLvB,EAAAC,EAAAC,cAAA,SAAIsB,yBCgCGG,oNA5CbC,MAAQ,CACNC,MAAO,MAGTC,QAAU,OAEVC,SAAW,SAACC,GAAU,IAEZC,EAAaC,EAAKC,MAAlBF,SAERC,EAAKE,SAAS,CAAEP,MAAOG,EAAMK,OAAOR,QACpCS,aAAaJ,EAAKJ,SAGlBI,EAAKJ,QAAUS,WAAY,WACzBN,EAASC,EAAKN,MAAMC,QACnB,8EAGK,IAEAA,EAAUW,KAAKZ,MAAfC,MAER,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAaE,UAAU,iBAAiBuC,KAAK,SAASC,KAAK,OAC3D3C,EAAAC,EAAAC,cAAA,SACE0C,KAAK,OACLzC,UAAU,uBACV0C,YAAY,SACZC,SAAUN,KAAKT,SACfF,MAAOA,aAjCKkB,cCyBTC,SA1BK,SAAA3B,GAAmC,IAAhC4B,EAAgC5B,EAAhC4B,OAAQC,EAAwB7B,EAAxB6B,QAASC,EAAe9B,EAAf8B,SAWtC,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ8C,IAAWC,EAAUlD,EAAAC,EAAAC,cAAA,UAAK+C,GAAe,KAC1CjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAXIgD,EAASC,IAAK,SAACC,EAASC,GAAV,OACjCtD,EAAAC,EAAAC,cAAA,OAAKqD,IAAKD,EAAGnD,UAAU,qBACpBkD,SCgBMG,SApBI,SAAAnC,GAAA,IAAGC,EAAHD,EAAGC,MAAOmC,EAAVpC,EAAUoC,QAASC,EAAnBrC,EAAmBqC,UAAWC,EAA9BtC,EAA8BsC,UAA9B,OACjB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEZwD,EACC3D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,CAAEuD,SAAQ,IAAAlC,OAAM+B,GAAYC,UAAS,GAAAhC,OAAKgC,KAClD1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,IAAKgB,EAAOf,IAAI,gBAG7CP,EAAAC,EAAAC,cAAA,OAAKI,IAAKgB,EAAOf,IAAI,kBCEZsD,SAXK,SAAAxC,GAAA,IAAGG,EAAHH,EAAGG,KAAMd,EAATW,EAASX,QAAT,OAClBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBO,QAASA,GACzCV,EAAAC,EAAAC,cAAA,SAAIsB,MCCOsC,SAJC,kBACd9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aC0HF4D,oNAnHbnC,MAAQ,CACNoC,OAAQ,GACRC,UAAW,KACXf,SAAS,EACTgB,YAAa,EACbC,WAAY,EACZC,WAAY,MAcdC,YAAc,SAACD,GACb,IAAIE,EAAW,GACfpC,EAAKE,SAAS,CACZ4B,OAAQ,GACRd,SAAS,EACTkB,eAIAE,EADiB,KAAfF,EACM,GAAA1C,OAAMV,EAAN,0BAAAU,OAAsCT,EAAtC,0BAEA,GAAAS,OAAMV,EAAN,yBAAAU,OAAqCT,EAArC,0BAAAS,OAAqE0C,GAE/ElC,EAAKqC,WAAWD,MAGlBE,cAAgB,WAAM,IAAAC,EAEgBvC,EAAKN,MAAjCwC,EAFYK,EAEZL,WAAYF,EAFAO,EAEAP,YAEhBI,EAAW,GACfpC,EAAKE,SAAS,CAAEc,SAAS,IAGvBoB,EADiB,KAAfF,EACM,GAAA1C,OAAMV,EAAN,0BAAAU,OAAsCT,EAAtC,yBAAAS,OAAqEwC,EAAc,GAEnF,GAAAxC,OAAMV,EAAN,yBAAAU,OAAqCT,EAArC,0BAAAS,OAAqE0C,EAArE,UAAA1C,OAAwFwC,EAAc,GAEhHhC,EAAKqC,WAAWD,MAGlBC,WAAa,SAACD,GAAa,IAAAI,EAEiBxC,EAAKN,MAAvCoC,EAFiBU,EAEjBV,OAAQC,EAFSS,EAETT,UAAWG,EAFFM,EAEEN,WAE3BO,MAAML,GACLM,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GACJ3C,EAAKE,SAAS,CACZ4B,OAAM,GAAAtC,OAAAjC,OAAAsF,EAAA,EAAAtF,CAAMuE,GAANvE,OAAAsF,EAAA,EAAAtF,CAAiBoF,EAAOG,UAC9Bf,UAAWA,GAAaY,EAAOG,QAAQ,GACvC9B,SAAS,EACTgB,YAAaW,EAAOI,KACpBd,WAAYU,EAAOK,aAClB,WAEkB,KAAfd,GACFe,eAAejG,QAAQ,YAAaL,KAAKI,UAAUiD,EAAKN,YAI7DwD,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,yFA7DxC,GAAIF,eAAevG,QAAQ,aAAc,CACvC,IAAIgD,EAAQ/C,KAAKC,MAAMqG,eAAevG,QAAQ,cAC9C4D,KAAKJ,SAAL3C,OAAA8F,EAAA,EAAA9F,CAAA,GAAmBmC,QACd,CACLY,KAAKJ,SAAS,CAAEc,SAAS,IACzB,IAAMoB,EAAQ,GAAA5C,OAAMV,EAAN,0BAAAU,OAAsCT,EAAtC,0BACduB,KAAK+B,WAAWD,qCA0DX,IAAAkB,EAEqEhD,KAAKZ,MAAzEoC,EAFDwB,EAECxB,OAAQC,EAFTuB,EAESvB,UAAWf,EAFpBsC,EAEoBtC,QAASgB,EAF7BsB,EAE6BtB,YAAaC,EAF1CqB,EAE0CrB,WAAYC,EAFtDoB,EAEsDpB,WAE7D,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ8D,EACCjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuF,EAAD,CACEnE,MAAK,GAAAI,OAAKP,GAALO,OPhFG,SOgFHA,OAAsCuC,EAAUyB,eACrDnE,MAAO0C,EAAU0B,eACjBnE,KAAMyC,EAAU2B,WAElB5F,EAAAC,EAAAC,cAAC2F,EAAD,CAAW5D,SAAUO,KAAK6B,eACnB,KACTrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC4F,EAAD,CACE7C,OAAQmB,EAAa,gBAAkB,iBACvClB,QAASA,GAERc,EAAOZ,IAAK,SAACC,EAASC,GAAV,OACXtD,EAAAC,EAAAC,cAAC6F,EAAD,CACExC,IAAKD,EACLK,WAAW,EACXrC,MAAO+B,EAAQ2C,YAAR,GAAAtE,OAAyBP,GAAzBO,OP5FL,QO4FKA,OAAwD2B,EAAQ2C,aAAgB,wBACvFvC,QAASJ,EAAQ4C,GACjBvC,UAAWL,EAAQsC,oBAIxBzC,EAAUlD,EAAAC,EAAAC,cAACgG,EAAD,MAAc,KACvBhC,GAAeC,IAAejB,EAC9BlD,EAAAC,EAAAC,cAACiG,EAAD,CAAa3E,KAAK,YAAYd,QAAS8B,KAAKgC,gBAC1C,cA5GGzB,cCWJqD,SAhBI,SAAA/E,GAAA,IAAGgF,EAAHhF,EAAGgF,MAAH,OACjBrG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,kBAEFF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,SAAImG,OCgCKC,SArCG,SAAAjF,GAAA,IAAGgF,EAAHhF,EAAGgF,MAAOE,EAAVlF,EAAUkF,UAAV,OAChBvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbK,MAAO,CACLiB,WAAY4E,EAAMX,cAAN,QAAAhE,OAA8BP,GAA9BO,OTII,SSJJA,OAA+D2E,EAAMX,cAArE,MAAyF,SAGvG1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC6F,EAAD,CACEzE,MAAO+E,EAAML,YAAN,GAAAtE,OAAuBP,GAAvBO,OTCG,QSDHA,OAAsD2E,EAAML,aAAgB,wBACnFrC,WAAW,KAGf3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAKmG,EAAM9E,OACXvB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAImG,EAAMT,UACV5F,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOsG,IAAI,IAAIC,IAAI,MAAMC,QAAQ,MAAMC,IAAI,KAAKC,KAAK,KAAK/E,MAA6B,GAArBwE,EAAMQ,eACxE7G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAckG,EAAMQ,eAElCN,EAAUO,OAAS,EAAI9G,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,sBAC5CqG,EAAUnD,IAAK,SAACC,EAASC,GACxB,OAAOtD,EAAAC,EAAAC,cAAA,KAAGqD,IAAKD,EAAGnD,UAAU,iBAAiBkD,EAAQX,SAGzD1C,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAaE,UAAU,UAAUuC,KAAK,OAAOC,KAAK,WC1B3CoE,EAAe,SAACC,GAM3B,OALgB,IAAIC,KAAKC,aAAa,QAAS,CAC7C1G,MAAO,WACP2G,SAAU,MACVC,sBAAuB,IAERC,OAAOL,ICiBXM,SAzBM,SAAAjG,GAAA,IAAGkG,EAAHlG,EAAGkG,KAAMC,EAATnG,EAASmG,OAAQC,EAAjBpG,EAAiBoG,QAAjB,OACnBzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAaE,UAAU,UAAUuC,KAAK,UAAUC,KAAK,OACrD3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,iBDVgB,SAACoH,GACvB,IAAMG,EAAQC,KAAKC,MAAML,EAAO,IAC1BM,EAAON,EAAO,GACpB,SAAA7F,OAAUgG,EAAV,MAAAhG,OAAoBmG,EAApB,KCO8DC,CAASP,KAEnEvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAaE,UAAU,YAAYuC,KAAK,QAAQC,KAAK,OACrD3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,WAAkD4G,EAAaS,KAEjExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAaE,UAAU,aAAauC,KAAK,SAASC,KAAK,OACvD3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,YAAmD4G,EAAaU,SCMzDM,SApBD,SAAA1G,GAAe,IAAZ2G,EAAY3G,EAAZ2G,MAIf,OACEhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACEI,IAAK0H,EAAMC,aAAN,GAAAvG,OAAwBP,GAAxBO,OALS,QAKTA,OAAuDsG,EAAMC,cAAiB,wBACnF1H,IAAI,eAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmB6H,EAAMtF,MACzC1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwB6H,EAAME,uCCiIrCC,6MAnIbvG,MAAQ,CACNyE,MAAO,KACP+B,OAAQ,KACR7B,UAAW,GACXrD,SAAS,KAkBXqB,WAAa,SAACD,GAAa,IAEjBb,EAAYvB,EAAKC,MAAMkG,MAAMC,OAA7B7E,QAERkB,MAAML,GACLM,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GAEAA,EAAO0D,YAETrG,EAAKE,SAAS,CAAEc,SAAS,IAEzBhB,EAAKE,SAAS,CAAEiE,MAAOxB,GAAU,WAE/B,IAAIP,EAAQ,GAAA5C,OAAMV,EAAN,UAAAU,OAAsB+B,EAAtB,qBAAA/B,OAAiDT,GAC7D0D,MAAML,GACLM,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GAEJ,IAAM0B,EAAY1B,EAAO2D,KAAKC,OAAQ,SAACC,GAAD,MAA2B,aAAfA,EAAOC,MAEzDzG,EAAKE,SAAS,CACZgG,OAAQvD,EAAO+D,KACfrC,YACArD,SAAS,GACR,WACDvE,aAAaO,QAAb,GAAAwC,OAAwB+B,GAAW5E,KAAKI,UAAUiD,EAAKN,gBAMhEwD,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,QAI1CwD,SAAW,WAAM,IACPxC,EAAWnE,EAAKN,MAAhByE,MACA5C,EAAYvB,EAAKC,MAAMkG,MAAMC,OAA7B7E,QACFqF,EAAsBrK,IACtBsK,EAAQ,CACZrF,UAAW2C,EAAQA,EAAMV,eAAiB,GAC1ClC,UACA/E,KAAMoK,GAGNE,IAAM,CACFC,OAAQ,OACRC,IAAKhI,EAAc,kBACnBiI,KAAMJ,EACNK,QAAS,CACPC,eAAgB,sBAGnBzE,KAAK,SAAU0E,GACS,MAApBA,EAASC,QACVC,MAAM,wBAOTpE,MAAM,SAAUC,GAEfC,QAAQmE,IAAIpE,yFAhFA,IAEV5B,EAAYjB,KAAKL,MAAMkG,MAAMC,OAA7B7E,QAER,GAAI9E,aAAaC,QAAb,GAAA8C,OAAwB+B,IAAY,CACtC,IAAI7B,EAAQ/C,KAAKC,MAAMH,aAAaC,QAAb,GAAA8C,OAAwB+B,KAC/CjB,KAAKJ,SAAL3C,OAAA8F,EAAA,EAAA9F,CAAA,GAAmBmC,QACd,CACLY,KAAKJ,SAAS,CAAEc,SAAS,IAEzB,IAAIoB,EAAQ,GAAA5C,OAAMV,EAAN,UAAAU,OAAsB+B,EAAtB,aAAA/B,OAAyCT,EAAzC,mBACZuB,KAAK+B,WAAWD,qCA0EX,IAAAoF,EAAAlH,KAECkB,EAAclB,KAAKL,MAAMwH,SAAzBjG,UAFDe,EAGuCjC,KAAKZ,MAA3CyE,EAHD5B,EAGC4B,MAAOE,EAHR9B,EAGQ8B,UAAW6B,EAHnB3D,EAGmB2D,OAAQlF,EAH3BuB,EAG2BvB,QAElC,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZkG,EACDrG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAD,CAAYvD,MAAO3C,IACnB1D,EAAAC,EAAAC,cAAC2J,EAAD,CAAWxD,MAAOA,EAAOE,UAAWA,IACpCvG,EAAAC,EAAAC,cAAC4J,EAAD,CAAcvC,KAAMlB,EAAM0D,QAASvC,OAAQnB,EAAMmB,OAAQC,QAASpB,EAAMoB,WAExE,KACFzH,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEM,OAAQ,kBACpBd,EAAAC,EAAAC,cAAA,UACAQ,QAAS,kBAAIgJ,EAAKb,YAClBrI,MAAO,CAAEwJ,SAAU,OAAQvJ,QAAS,mBACnCwJ,gBAAiB,QAASlJ,MAAO,QAAUmJ,OAAQ,aAAaC,aAChE,UAAWtJ,OAAQ,YAJpB,eAQDuH,EACDpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC4F,EAAD,CAAa7C,OAAQ,UAClBmF,EAAOhF,IAAK,SAACC,EAASC,GAAV,OACXtD,EAAAC,EAAAC,cAACkK,EAAD,CAAO7G,IAAKD,EAAG0E,MAAO3E,QAI1B,KACA+E,GAAWlF,EAAoC,KAA1BlD,EAAAC,EAAAC,cAAA,4BACtBgD,EAAUlD,EAAAC,EAAAC,cAACgG,EAAD,MAAc,aA9HbnD,aCLLsH,EANE,kBACfrK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,y0MCwEWb,kBAtEf,WAAqB,IAAAC,EACKC,mBAAS,IADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdgL,EADc9K,EAAA,GACP+K,EADO/K,EAAA,GAAAgL,EAEAjL,mBAAS,IAFTkL,EAAAhL,OAAAC,EAAA,EAAAD,CAAA+K,EAAA,GAEdE,EAFcD,EAAA,GAEVE,EAFUF,EAAA,GAGf7K,EAAUC,cAHK+K,EAIErL,mBAAS,MAJXsL,EAAApL,OAAAC,EAAA,EAAAD,CAAAmL,EAAA,GAIdlM,EAJcmM,EAAA,GAITlL,EAJSkL,EAAA,GAMfC,EAAa,eAAAzJ,EAAA5B,OAAAsL,EAAA,EAAAtL,CAAAuL,IAAAC,KAAG,SAAAC,EAAOC,GAAP,OAAAH,IAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBJ,EAAEK,iBACFxC,IAAM,CACFC,OAAQ,OACRC,IAAKhI,EAAc,SACnBiI,KAAM,CAACzG,KAAM4H,GACblB,QAAS,CACPC,eAAgB,sBAGnBzE,KAAK,SAAU0E,GACXA,EAASH,MACLG,EAASH,KAAKzG,OACb3D,EAAgBuK,EAASH,KAAKzG,MAC9B+I,GAAU,MAKnBrG,MAAM,SAAUC,GACfoG,IACAnG,QAAQmE,IAAIpE,KArBE,wBAAAgG,EAAAK,SAAAR,MAAH,gBAAAS,GAAA,OAAAtK,EAAAuK,MAAApJ,KAAAqJ,YAAA,GA2BnB/L,oBAAU,WACV,IAAMgJ,EAAsBrK,IAC5BkB,EAAQmJ,IACL,IAEH,IAAM2C,EAAY,WAAsB,IAArBK,EAAqBD,UAAA/E,OAAA,QAAAiF,IAAAF,UAAA,IAAAA,UAAA,GACpClB,EAAOmB,EAAY,UAAY,UAC/BvJ,WAAW,WACPoI,EAAO,IACJmB,IACClM,EAAQe,KAAK,KACbqL,OAAOrC,SAASsC,WAErB,MAGH,OACIjM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiM,SAAA,KACCxN,EAAO,oBAChBsB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACM,OAAQ,kBACrBd,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMiM,SAAU,SAAChB,GAAD,OAAKL,EAAcK,KAC/BnL,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,QAAQb,MAAOyI,EAAO8B,UAAQ,EAACtJ,SAAU,SAACqI,GAAD,OAAMZ,EAASY,EAAE9I,OAAOR,QAAQgB,YAAY,eAGjG7C,EAAAC,EAAAC,cAAA,UAAQM,MAAO,CAAC6L,WAAY,OAAQpC,gBAAgB,QAASlJ,MAAO,SAAU6B,KAAK,UAAnF,OAEJ5C,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEO,MAAe,YAAR2J,EAAoB,QAAU,QAAUA,QChDhD4B,MAlBf,SAAAjL,GAAoD,IAAhC2C,EAAgC3C,EAAhC2C,OAAQuI,EAAwBlL,EAAxBkL,YAAaC,EAAWnL,EAAXmL,SAErC,OACIxM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiM,SAAA,KACRlM,EAAAC,EAAAC,cAAA,UACK8D,GAAUA,EAAOZ,IAAI,SAACE,GACnB,OACItD,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAACM,OAAQ,aAAcyC,IAAKD,EAAEmJ,KAAMnJ,EAAEI,UACjD1D,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAI6L,EAAYjJ,EAAEG,UAAUjD,MAAO,CAAEK,OAAO,UAAWC,OAAQ,SAAUC,MAAO,SAA/F,eACAf,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAI8L,EAASlJ,EAAEmJ,MAAMjM,MAAO,CAAEK,OAAO,UAAWC,OAAQ,SAAUC,MAAO,QAAxF,gBC4EG1B,kBAhFf,WAAsB,IAAAC,EAEgBC,mBAAS,IAFzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEXoN,EAFWlN,EAAA,GAEAmN,EAFAnN,EAAA,GAIRsJ,EAAsBrK,IACtBmB,EAAUC,cAEhBC,oBAAU,WACN8M,KACD,IAEH,IAAMA,EAAY,WACd5D,IAAM,CACFC,OAAQ,MACRC,IAAKhI,EAAc,SAAS4H,EAE5BM,QAAS,CACPC,eAAgB,sBAGnBzE,KAAK,SAAU0E,GACXA,EAASH,OAEJ7D,QAAQmE,IAAIH,EAASH,MACvBwD,EAAarD,EAASH,KAAK0D,iBAKlCzH,MAAM,SAAUC,GAEfC,QAAQmE,IAAIpE,MAgCxB,OACIrF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACM,OAAQ,kBACjBgI,EAAuB9I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiM,SAAA,KACvBlM,EAAAC,EAAAC,cAAA,oBAAY4I,GACX4D,EAAU5F,OAAS,EACpB9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiM,SAAA,KACXlM,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAC4M,EAAD,CAAW9I,OAAQ0I,EAAWH,YAlCJ,SAAC9I,GAChB7D,EAAQe,KAAK,IAAI8C,IAiC4B+I,SA9BhC,SAACvG,GACd+C,IAAM,CACFC,OAAQ,SACRC,IAAKhI,EAAc,SAAW4H,EAAsB,iBAAkB7C,EACtEmD,QAAS,CACPC,eAAgB,sBAGnBzE,KAAK,SAAU0E,GACS,MAApBA,EAASC,QACRqD,MAMLxH,MAAM,SAAUC,GAEfC,QAAQmE,IAAIpE,SAcd,wCAGA,iBCrDC0H,EAlBH,WAEZ,OACE/M,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMiM,SAAP,KACElM,EAAAC,EAAAC,cAAC8M,EAAD,MACAhN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,KACEjN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWpJ,EAAMqJ,OAAK,IACtCpN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWhF,EAAOiF,OAAK,IAC/CpN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWE,EAAWD,OAAK,IACpDpN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWG,EAAYF,OAAK,IACpDpN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOE,UAAW9C,iBCpBXkD,EAAA,UAAIA,GAAa,CAC9BC,IAAK,kCCSPC,IAASC,OAAQ1N,EAAAC,EAAAC,cAACyN,EAAA,EAAD,CAAgBC,OAAQA,GAAQ5N,EAAAC,EAAAC,cAAC2N,EAAD,OAA0BC,SAASC,eAAe","file":"static/js/main.9c349e49.chunk.js","sourcesContent":["export const getLoggedInUser = () => {\n    const user = localStorage.getItem(\"user\")\n    return JSON.parse(user)\n}\n\nexport const setLoggedInUser = (user) => {\n    const stringifiedUser = JSON.stringify(user)\n    localStorage.setItem(\"user\", stringifiedUser)\n}\n\nexport const logout = () => {\n\n    localStorage.removeItem(\"user\")\n}","import React, { useEffect, useState } from 'react';\nimport { Link , useHistory, withRouter} from 'react-router-dom';\nimport { getLoggedInUser, logout } from '../../../service/user';\nimport './Header.css';\n\nfunction Header() {\n  const [user,setUser] = useState(null)\n  const history = useHistory()\n  \n  useEffect(()=> {\n    const storedUser = getLoggedInUser()\n    setUser(storedUser)\n  }, [])\n\n  const onLogout = () => {\n    logout()\n    getLoggedInUser()\n    setUser(null)\n    history.push(\"/\")\n  }\n\n  return (\n  <div className=\"rmdb-header\">\n    <div className=\"rmdb-header-content\">\n      <Link to=\"/\">\n        <img className=\"rmdb-logo\" src=\"/images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n      </Link>\n      \n      <img className=\"rmdb-tmdb-logo\" src=\"/images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n      \n    </div>\n    <div style={{   padding: \"0 0 40px 10px\" }}>\n    {user ? <div>\n      <p onClick={()=>onLogout()} style={{float: \"right\", cursor:\"pointer\", margin: \"0 20px\", color:\"yellow\"}} >\n     Logout\n    </p>\n      <Link style={{float: \"right\", color:\"green\"}} to=\"/app/user\">\n     {user}\n    </Link>\n    \n    </div> :\n    \n    <Link style={{float: \"right\", color:\"red\"}} to=\"/app/login\">\n     Login\n    </Link>\n   \n}\n</div>\n  </div>\n  \n  \n)\n  }\n\nexport default withRouter(Header);","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\nconst BACKEND_API = 'http://localhost:4000/api'\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  BACKEND_API\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div className=\"rmdb-heroimage\"\n    style={{\n      background:\n        `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className=\"rmdb-heroimage-content\">\n      <div className=\"rmdb-heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n)\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default HeroImage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  }\n  // Must have this here so we can reset it\n  timeout = null;\n\n  doSearch = (event) => {\n    // ES6 Destructuring prop\n    const { callback } = this.props;\n\n    this.setState({ value: event.target.value })\n    clearTimeout(this.timeout);\n    // Set a timeout to wait for the user to stop writing\n    // So we don´t have to make unnessesary calls\n    this.timeout = setTimeout( () => {\n      callback(this.state.value);\n    }, 500);\n  }\n\n  render () {\n    // ES6 Destructuring state\n    const { value } = this.state;\n\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={value}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ header, loading, children }) => {\n\n  const renderElements = () => {\n    const gridElements = children.map( (element, i) => (\n      <div key={i} className=\"rmdb-grid-element\">\n        {element}\n      </div>\n    ))\n    return gridElements;\n  }\n\n  return (\n    <div className=\"rmdb-grid\">\n      {header && !loading ? <h1>{header}</h1> : null}\n      <div className=\"rmdb-grid-content\">\n         {renderElements()}\n      </div>\n    </div>\n  )\n}\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n}\n\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <div className=\"rmdb-moviethumb\">\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\n    {clickable ?\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n      :\n      <img src={image} alt=\"moviethumb\" />\n    }\n  </div>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  clickable: PropTypes.bool\n}\n\nexport default MovieThumb;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"loader\"></div>\n)\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  loadMoreItems = () => {\n    // ES6 Destructuring the state\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = '';\n    this.setState({ loading: true })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 Destructuring the state\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n      this.setState({\n        movies: [...movies, ...result.results],\n        heroImage: heroImage || result.results[0],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }, () => {\n        // Remember state for the next mount if we´re not in a search view\n        if (searchTerm === \"\") {\n          sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n        }\n      })\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the state\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        {heroImage ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems}/>\n          </div> : null }\n          <div className=\"rmdb-home-grid\">\n            <FourColGrid\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\n              loading={loading}\n            >\n              {movies.map( (element, i) => (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              ))}\n            </FourColGrid>\n            {loading ? <Spinner /> : null}\n            {(currentPage <= totalPages && !loading) ?\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n              : null\n            }\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Navigation.css';\n\nconst Navigation = ({ movie }) => (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{movie}</p>\n    </div>\n  </div>\n)\n\nNavigation.propTypes = {\n  movie: PropTypes.string\n}\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\n          clickable={false}\n        />\n      </div>\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.vote_average * 10}></meter>\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {directors.map( (element, i) => {\n          return <p key={i} className=\"rmdb-director\">{element.name}</p>\n        })}\n      </div>\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n    </div>\n  </div>\n)\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers.js';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <div className=\"rmdb-movieinfobar\">\n    <div className=\"rmdb-movieinfobar-content\">\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(time)}</span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(budget)}</span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(revenue)}</span>\n      </div>\n    </div>\n  </div>\n)\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL } from '../../../config';\nimport PropTypes from 'prop-types';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => {\n\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : './images/no_image.jpg'}\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{actor.name}</span>\n      <span className=\"rmdb-actor-character\">{actor.character}</span>\n    </div>\n  )\n}\n\nActor.propTypes = {\n  actor: PropTypes.object\n}\n\nexport default Actor;","import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\nimport { getLoggedInUser } from \"../../service/user\"\nimport { BACKEND_API } from '../../config';\nimport Axios from \"axios\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n\n      if (result.status_code) {\n        // If we don't find any movie\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result }, () => {\n          // ... then fetch actors in the setState callback function\n          let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n          fetch(endpoint)\n          .then(result => result.json())\n          .then(result => {\n\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\n\n            this.setState({\n              actors: result.cast,\n              directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n            })\n          })\n        })\n      }\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n\n  addToFav = () => {\n    const { movie, } = this.state;\n    const { movieId } = this.props.match.params;\n    const loggedInUserFetched = getLoggedInUser()\n    const input = {\n      movieName: movie ? movie.original_title : \"\",\n      movieId,\n      user: loggedInUserFetched,\n    }\n   \n      Axios({\n          method: \"POST\",\n          url: BACKEND_API + '/movies/add-fav',\n          data: input,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(function (response) {\n          if(response.status === 200) {\n            alert(\"Added successfully\")\n                  \n                \n              \n          }\n          \n        })\n        .catch(function (error) {\n      \n          console.log(error);\n        }); \n\n  }\n\n  render() {\n    // ES6 Destructuring the props and state\n    const { movieName } = this.props.location;\n    const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ?\n        <div>\n          <Navigation movie={movieName} />\n          <MovieInfo movie={movie} directors={directors} />\n          <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n        </div>\n        : null }\n        <div style={{ margin: \"10px 0 0 30px\",  }}>\n          <button\n          onClick={()=>this.addToFav()}\n          style={{ fontSize: \"1rem\", padding: \"0.375rem 0.75rem\",\n           backgroundColor: \"green\", color: \"white\"  ,border: \"1px solid \",borderRadius: \n           \"0.25rem\", cursor: \"pointer\"}}>\n             Add to Fav\n             </button>\n        </div>\n        {actors ?\n        <div className=\"rmdb-movie-grid\">\n          <FourColGrid header={'Actors'}>\n            {actors.map( (element, i) => (\n              <Actor key={i} actor={element} />\n            ))}\n          </FourColGrid>\n        </div>\n        : null }\n        {!actors && !loading ? <h1>No movie found</h1> : null }\n        {loading ? <Spinner /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whooops. This page doesn't exist</h1>\n  </div>\n)\n\nexport default NotFound;","import React, { useEffect, useState } from \"react\"\nimport { BACKEND_API } from '../../config';\nimport Axios from \"axios\";\nimport { getLoggedInUser, setLoggedInUser } from \"../../service/user\";\nimport { withRouter, useHistory } from 'react-router-dom';\n\nfunction LoginPage() {\nconst [uname, setUname] = useState(\"\")\nconst [msg,setMsg] = useState(\"\")\nconst history = useHistory()\nconst [user,setUser] = useState(null)\n\nconst onLoginSubmit = async (e) => {\n    e.preventDefault()\n    Axios({\n        method: \"POST\",\n        url: BACKEND_API + '/login',\n        data: {name: uname},\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(function (response) {\n        if(response.data) {\n            if(response.data.name) {\n                setLoggedInUser(response.data.name)\n                handleMsg(true)\n            }\n        }\n        \n      })\n      .catch(function (error) {\n        handleMsg()\n        console.log(error);\n      }); \n}\n\n\n\nuseEffect(()=> {\nconst loggedInUserFetched = getLoggedInUser()\nsetUser(loggedInUserFetched)\n}, [])\n\nconst handleMsg = (isSuccess= false) => {\n    setMsg(isSuccess ? \"Success\" : \"Failed\")\n    setTimeout(()=> {\n        setMsg(\"\")\n        if(isSuccess) {\n            history.push(\"/\")\n            window.location.reload();\n        }\n    }, 3000)\n}\n\n    return (\n        <>\n        {user ? \"Already logged in\" :\n<div style={{margin: \"10px 0 0 30px\"}}>\n<h3>Login Page</h3>\n<div>\n    <form onSubmit={(e)=>onLoginSubmit(e)}>\n        <label>Name: </label>\n        <input name=\"uname\" value={uname} required onChange={(e)=> setUname(e.target.value)} placeholder=\"Enter name\" />\n      \n\n        <button style={{marginLeft: \"20px\", backgroundColor:\"green\", color: \"white\"}} type=\"submit\">Go</button>\n    </form>\n    <p style={{ color: msg === \"Success\" ? \"green\" : \"red\" }}>{msg}</p>\n</div>\n</div>\n}\n        </>\n    )\n}\n\nexport default withRouter(LoginPage)","import React from \"react\"\n\nfunction MovieList({movies, onViewClick, onRemove}) {\n    \n    return (\n        <>\n<ul>\n    {movies && movies.map((i)=>{\n        return (\n            <li style={{margin: \"0 0 8px 0\"}} key={i._id}>{i.movieName}\n            <span onClick={()=>onViewClick(i.movieId)} style={{ cursor:\"pointer\", margin: \"0 10px\", color: \"blue\" }}>View Detail</span>\n            <span onClick={()=>onRemove(i._id)} style={{ cursor:\"pointer\", margin: \"0 10px\", color: \"red\" }}>Remove</span>\n            </li>\n        )\n    })}\n</ul>\n        </>\n    )\n}\n\nexport default MovieList","import React, { useEffect, useState } from \"react\"\nimport { getLoggedInUser } from \"../service/user\"\nimport { BACKEND_API } from '../config';\nimport Axios from \"axios\";\nimport MovieList from \"./MovieList\";\nimport { useHistory, withRouter } from \"react-router\";\n\nfunction UserDetail() {\n    \n    const [favMovies, setFavMovies] = useState([])\n  \n        const loggedInUserFetched = getLoggedInUser()\n        const history = useHistory()\n\n        useEffect(()=> {\n            getMovies()\n        }, [])\n\n        const getMovies = () => {\n            Axios({\n                method: \"GET\",\n                url: BACKEND_API + '/user/'+loggedInUserFetched,\n          \n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n              .then(function (response) {\n                if(response.data) {\n                  \n                        console.log(response.data)\n                      setFavMovies(response.data.favMovieList)\n                    \n                }\n                \n              })\n              .catch(function (error) {\n            \n                console.log(error);\n              }); \n        }\n\n\n       const onViewClick = (movieId) => {\n            history.push(\"/\"+movieId)\n        }\n\n        const onRemove = (id) => {\n            Axios({\n                method: \"DELETE\",\n                url: BACKEND_API + \"/user/\" + loggedInUserFetched + \"/remove-movie/\"+ id,\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n              .then(function (response) {\n                if(response.status === 200) {\n                    getMovies()\n                        \n                    \n                }\n                \n              })\n              .catch(function (error) {\n            \n                console.log(error);\n              }); \n        }\n      \n\n    return (\n        <div style={{margin: \"20px 0 0 30px\"}}>\n           {loggedInUserFetched ?  <>\n            <h3>Hello, {loggedInUserFetched}</h3>\n            {favMovies.length > 0 ? \n            <>\n <p>Your fav movies are: </p>\n <MovieList movies={favMovies} onViewClick={onViewClick} onRemove={onRemove} />\n            </>\n            : \"You do not have added fav movies yet\"}\n           \n           </>\n           :  \"Login first\"}\n            </div>\n    )\n}\n\nexport default withRouter(UserDetail)","import React from 'react';\nimport { BrowserRouter, Route, Switch,  } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\nimport LoginPage from '../LoginPage.js/LoginPage';\nimport UserDetail from '../../User';\n\n\n\nconst App = () => {\n  \nreturn (\n  <BrowserRouter>\n    <React.Fragment>\n      <Header  />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/:movieId\" component={Movie} exact />\n        <Route path=\"/app/login\" component={LoginPage} exact />\n        <Route path=\"/app/user\" component={UserDetail} exact />\n        <Route component={NotFound} />\n      </Switch>\n    </React.Fragment>\n  </BrowserRouter>\n)\n}\n\nexport default App;","import ApolloClient from 'apollo-boost';\n\nexport default new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from \"./ApolloClient\"\n\n\n\nReactDOM.render( <ApolloProvider client={client}><App /></ApolloProvider>, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}